#!/usr/bin/env python

import datetime, os, sys
import syslog

from ietf import settings
from django.core import management
management.setup_environ(settings)

syslog.openlog(os.path.basename(__file__), syslog.LOG_PID, syslog.LOG_USER)


from ietf.announcements.send_scheduled import *
from django.db.models import Q

if len(sys.argv) != 2 or sys.argv[1] not in ('all', 'rsync', 'specific'):
    print "USAGE: %s <all | rsync | specific>" % os.path.basename(__file__)
    print "'all' means all not sent"
    print "'rsync' means all not sent where to-be-sent-date is null"
    print "'specific' means all not sent that are due to be sent"
    sys.exit(1)

mode = sys.argv[1]

now = datetime.datetime.now()

from ietf.message.models import SendQueue
needs_sending = SendQueue.objects.filter(sent_at=None).select_related("message")
if mode == "rsync":
    needs_sending = needs_sending.filter(send_at=None)
elif mode == "specific":
    needs_sending = needs_sending.exclude(send_at=None).filter(send_at__lte=now)

for s in needs_sending:
    send_scheduled_announcement(s)

    subject = s.message.subject
    syslog.syslog(u'Sent scheduled announcement %s "%s"' % (s.id, subject))
